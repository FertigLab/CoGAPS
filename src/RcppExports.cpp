// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// cogaps_cpp
Rcpp::List cogaps_cpp(const Rcpp::NumericMatric& DMatrix, const Rcpp::NumericMatrix& SMatrix, const Rcpp::NumericMatrix& fixedPatterns, const Rcpp::S4& params);
RcppExport SEXP _CoGAPS_cogaps_cpp(SEXP DMatrixSEXP, SEXP SMatrixSEXP, SEXP fixedPatternsSEXP, SEXP paramsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Rcpp::NumericMatric& >::type DMatrix(DMatrixSEXP);
    Rcpp::traits::input_parameter< const Rcpp::NumericMatrix& >::type SMatrix(SMatrixSEXP);
    Rcpp::traits::input_parameter< const Rcpp::NumericMatrix& >::type fixedPatterns(fixedPatternsSEXP);
    Rcpp::traits::input_parameter< const Rcpp::S4& >::type params(paramsSEXP);
    rcpp_result_gen = Rcpp::wrap(cogaps_cpp(DMatrix, SMatrix, fixedPatterns, params));
    return rcpp_result_gen;
END_RCPP
}
// cogapsFromCheckpoint_cpp
Rcpp::List cogapsFromCheckpoint_cpp(const Rcpp::NumericMatrix& D, const Rcpp::NumericMatrix& S, const std::string& fileName);
RcppExport SEXP _CoGAPS_cogapsFromCheckpoint_cpp(SEXP DSEXP, SEXP SSEXP, SEXP fileNameSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Rcpp::NumericMatrix& >::type D(DSEXP);
    Rcpp::traits::input_parameter< const Rcpp::NumericMatrix& >::type S(SSEXP);
    Rcpp::traits::input_parameter< const std::string& >::type fileName(fileNameSEXP);
    rcpp_result_gen = Rcpp::wrap(cogapsFromCheckpoint_cpp(D, S, fileName));
    return rcpp_result_gen;
END_RCPP
}
// displayBuildReport_cpp
void displayBuildReport_cpp();
RcppExport SEXP _CoGAPS_displayBuildReport_cpp() {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    displayBuildReport_cpp();
    return R_NilValue;
END_RCPP
}
// run_catch_unit_tests
int run_catch_unit_tests();
RcppExport SEXP _CoGAPS_run_catch_unit_tests() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(run_catch_unit_tests());
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_CoGAPS_cogaps_cpp", (DL_FUNC) &_CoGAPS_cogaps_cpp, 4},
    {"_CoGAPS_cogapsFromCheckpoint_cpp", (DL_FUNC) &_CoGAPS_cogapsFromCheckpoint_cpp, 3},
    {"_CoGAPS_displayBuildReport_cpp", (DL_FUNC) &_CoGAPS_displayBuildReport_cpp, 0},
    {"_CoGAPS_run_catch_unit_tests", (DL_FUNC) &_CoGAPS_run_catch_unit_tests, 0},
    {NULL, NULL, 0}
};

RcppExport void R_init_CoGAPS(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
