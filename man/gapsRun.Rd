% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gapsRun.R
\name{gapsRun}
\alias{gapsRun}
\title{\code{gapsRun} calls the C++ MCMC code and performs Bayesian
matrix factorization returning the two matrices that reconstruct
the data matrix}
\usage{
gapsRun(D, S, ABins = data.frame(), PBins = data.frame(), nFactor = 7,
  simulation_id = "simulation", nEquil = 1000, nSample = 1000,
  nOutR = 1000, output_atomic = FALSE, fixedBinProbs = FALSE,
  fixedDomain = "N", sampleSnapshots = TRUE, numSnapshots = 100,
  alphaA = 0.01, nMaxA = 1e+05, max_gibbmass_paraA = 100, alphaP = 0.01,
  nMaxP = 1e+05, max_gibbmass_paraP = 100, seed = -1)
}
\arguments{
\item{D}{data matrix}

\item{S}{uncertainty matrix (std devs for chi-squared of Log Likelihood)}

\item{ABins}{a matrix of same size as A which gives relative
probability of that element being non-zero}

\item{PBins}{a matrix of same size as P which gives relative
probability of that element being non-zero}

\item{nFactor}{number of patterns (basis vectors, metagenes), which must be
greater than or equal to the number of rows of FP}

\item{simulation_id}{name to attach to atoms files if created}

\item{nEquil}{number of iterations for burn-in}

\item{nSample}{number of iterations for sampling}

\item{nOutR}{how often to print status into R by iterations}

\item{output_atomic}{whether to write atom files (large)}

\item{fixedBinProbs}{Boolean for using relative probabilities
given in Abins and Pbins}

\item{fixedDomain}{character to indicate whether A or P is
domain for relative probabilities}

\item{sampleSnapshots}{Boolean to indicate whether to capture
individual samples from Markov chain during sampling}

\item{numSnapshots}{the number of individual samples to capture}

\item{alphaA}{sparsity parameter for A domain}

\item{nMaxA}{PRESENTLY UNUSED, future = limit number of atoms}

\item{max_gibbmass_paraA}{limit truncated normal to max size}

\item{alphaP}{sparsity parameter for P domain}

\item{nMaxP}{PRESENTLY UNUSED, future = limit number of atoms}

\item{max_gibbmass_paraP}{limit truncated normal to max size}

\item{seed}{Set seed for reproducibility. Positive values provide initial seed, negative values just use the time.}
}
\description{
\code{gapsRun} calls the C++ MCMC code and performs Bayesian
matrix factorization returning the two matrices that reconstruct
the data matrix
}

